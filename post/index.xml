<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 一个程序员的博客</title>
    <link>https://hehe-1234.xyz/post/</link>
    <description>Recent content in Posts on 一个程序员的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 13 Apr 2025 10:10:12 +0800</lastBuildDate><atom:link href="https://hehe-1234.xyz/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OpenLDAP研究</title>
      <link>https://hehe-1234.xyz/post/2025/04/ldap/</link>
      <pubDate>Sun, 13 Apr 2025 10:10:12 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2025/04/ldap/</guid>
      <description>OpenLDAP研究</description>
    </item>
    
    <item>
      <title>PyTorch</title>
      <link>https://hehe-1234.xyz/post/2025/02/py_torch/</link>
      <pubDate>Thu, 30 Jan 2025 01:08:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2025/02/py_torch/</guid>
      <description>哈哈</description>
    </item>
    
    <item>
      <title>云环境中的日志收集和处理方案</title>
      <link>https://hehe-1234.xyz/post/2025/01/logs_collection_based_cloud/</link>
      <pubDate>Mon, 27 Jan 2025 01:08:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2025/01/logs_collection_based_cloud/</guid>
      <description>云环境日志收集，收集方式：直接读日志文件、log4j扩展。日志处理：写kafka、直接写共享存储、直接写s3、使用raft集群处理、使用NewSQL</description>
    </item>
    
    <item>
      <title>BTrace</title>
      <link>https://hehe-1234.xyz/post/2025/01/btrace/</link>
      <pubDate>Sun, 12 Jan 2025 01:08:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2025/01/btrace/</guid>
      <description>btrace的一个例子，arthas 的retransform，jdb 调试。以及其他一些分析工具，如 JDK 内置的、分布式监控工具、火焰图、jfr、visualvm、jprofiler、MAT 等等</description>
    </item>
    
    <item>
      <title>k8s 网络</title>
      <link>https://hehe-1234.xyz/post/2024/11/k8s_networks/</link>
      <pubDate>Mon, 04 Nov 2024 09:08:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2024/11/k8s_networks/</guid>
      <description>覆盖网络，Flannel 的 UDP模式、xvlan模式、host-gw，Calico 采用了BGP做三层转发，为防止退化为 IPIP，需要设置 BGP 的跳数。 使用 Network Policy 做网络隔离，k8s 的网络本质都是连通的，像是弱多租户。CNI 插件 的网络插件。Service 是由 kube-proxy 组件，加上 iptables 来共同实现的；所谓 Ingress，就是 Service 的“Service”。 调度：根据 etcd 的变化选择合适的 Node 做调度，Priorities为节点打分；Pod 调度失败的情况(抢占、优先级)；K8S 中两个不可替代的组件：kube-apiserver、kubelet；核心是循环控制器检查，容器运行时：CRI，除了docker还有containerd，基于虚拟化的：Kata Containers、gVisor</description>
    </item>
    
    <item>
      <title>个人工作简介</title>
      <link>https://hehe-1234.xyz/post/2024/10/me/</link>
      <pubDate>Thu, 24 Oct 2024 09:13:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2024/10/me/</guid>
      <description>工作简介，包括几份工作的主要工作内容、详细工作内容的链接、产品的架构设计图等</description>
    </item>
    
    <item>
      <title>scala总结</title>
      <link>https://hehe-1234.xyz/post/2024/10/scala_summary/</link>
      <pubDate>Tue, 15 Oct 2024 09:08:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2024/10/scala_summary/</guid>
      <description>高阶函数、函数柯里化、隐式转换(类型，对象)，lazy延迟计算、最后一行默认返回return。内置的可变 不可变集合、自动类型推导、操作符重载、模式匹配、内部函数、对象的apply和unapply、None和Some以及Option。foldLeft ，增强的for 循环，协变、逆变，上界 和 下界</description>
    </item>
    
    <item>
      <title>Parquet for Spark</title>
      <link>https://hehe-1234.xyz/post/2024/10/parquet_4_spark/</link>
      <pubDate>Wed, 02 Oct 2024 09:08:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2024/10/parquet_4_spark/</guid>
      <description>Spark执行Delta的过程，通过自定义的format格式，到DataFrameWriter.saveToV1Source，在是到DeltaDataSource#createRealation，写入做优化事务处理，再用FileFormatWriter创建多个Task并行写入，之后就是到Parquet内部执行阶段。Parquet包含Row Groups，往下是Column Chunk，再往下是Page，文件尾部包含Footer和一些元数据信息。Spark是按行写入的，一次写一行，每行写对应的 column。Parquet编码包括Dictionary Encoding、Run Length Encoding (RLE)、Delta Encoding。读取的主要类是VectorizedParquetRecordReader执行一批读取，调用VectorizedColumnReaders(对应每个column)，再调用VectorizedValuesReader(读取一个column中的一段数据)，返回由上层应用消费 。</description>
    </item>
    
    <item>
      <title>Spark-Streaming 原理</title>
      <link>https://hehe-1234.xyz/post/2024/09/spark_streaming/</link>
      <pubDate>Mon, 09 Sep 2024 09:08:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2024/09/spark_streaming/</guid>
      <description>spark streaming的基本原理，包括MicroBatchExecution，ContinuousExecution，通过IncrementalExecution + 状态实现micro-batch 并复用了spark 的所有查询逻辑；Source接口支持 getOffset，commit，可以自定义各种扩展实现；Sink包括：FileStreamSink、KafkaSink、DeltaSink、、ForeachBatchSink，ForeachWriteTable；Stateful将信息存如StateStoreRDD，保存到 HDFSBackedStateStoreProvider、RocksDBStateStoreProvider 中；Stream-Stream Join使用了StreamingSymmetricHashJoin，需要保证状态；Session Window同样也是通过插入一些流相关的算子 + 状态保存实现的</description>
    </item>
    
    <item>
      <title>OpenLogReplicator的一些改动</title>
      <link>https://hehe-1234.xyz/post/2024/08/open_log_rac/</link>
      <pubDate>Sun, 25 Aug 2024 09:08:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2024/08/open_log_rac/</guid>
      <description>对 OpenLogReplicator 的一些改动，支持ASM 文件读取，支持 RAC 多个活跃节点，高可用等</description>
    </item>
    
    <item>
      <title>Oracle的CDC工具OpenLogReplicator原理</title>
      <link>https://hehe-1234.xyz/post/2024/07/open_log_replicator/</link>
      <pubDate>Mon, 15 Jul 2024 09:08:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2024/07/open_log_replicator/</guid>
      <description>open log replicator 使用</description>
    </item>
    
    <item>
      <title>Oracle的CDC工具OpenLogReplicator编译</title>
      <link>https://hehe-1234.xyz/post/2024/06/open_log/</link>
      <pubDate>Sat, 15 Jun 2024 09:08:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2024/06/open_log/</guid>
      <description>open log replicator 编译</description>
    </item>
    
    <item>
      <title>Janino简单使用</title>
      <link>https://hehe-1234.xyz/post/2024/05/janino/</link>
      <pubDate>Sun, 05 May 2024 09:08:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2024/05/janino/</guid>
      <description>Janino的一些例子，Expression Evaluator，Script Evaluator，Class Body Evaluator，Simple Compiler，as a Source Code Class Loader，jsh - the Java shell，Compiler Plugin for Tomcat，code analysisi，debug</description>
    </item>
    
    <item>
      <title>Spark原理-解析过程和Catalog</title>
      <link>https://hehe-1234.xyz/post/2024/03/spark_internal/</link>
      <pubDate>Sat, 02 Mar 2024 09:08:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2024/03/spark_internal/</guid>
      <description>Spark解析过程和catalog</description>
    </item>
    
    <item>
      <title>Compaction in Apache Iceberg</title>
      <link>https://hehe-1234.xyz/post/2024/03/compaction-_in_apache_iceberg/</link>
      <pubDate>Thu, 29 Feb 2024 09:08:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2024/03/compaction-_in_apache_iceberg/</guid>
      <description>压缩，可以将多个小文件合并为大文件提高读性能，几种压缩策略：binpack（简单合并）、sort、z-order（适合多列查询），Expire Snapshots 可以删除过期的数据文件，还提供了参数可以自动删除manifest 文件、保留多少manifest文件，以及清除orphan 文件</description>
    </item>
    
    <item>
      <title>The Life of a Read/Write Query for Apache Iceberg Tables</title>
      <link>https://hehe-1234.xyz/post/2024/03/the_life_of_iceberg/</link>
      <pubDate>Mon, 26 Feb 2024 09:08:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2024/03/the_life_of_iceberg/</guid>
      <description>介绍了存储的结构，元数据层包括：manifest files、manifest list, metadata files，catalog指向最新的 metadata files；每一层都可以做裁减，包括数据层，介绍了读取、time travel过程，是自上往下的读取和裁减过程；写入过程：插入、删除、merge过程，写 过程是自下而上的，通过 切换catalog指向，利用OCC控制并发，实现ACID</description>
    </item>
    
    <item>
      <title>Data engineering at Meta</title>
      <link>https://hehe-1234.xyz/post/2024/02/data-engineering-at-meta/</link>
      <pubDate>Fri, 02 Feb 2024 09:08:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2024/02/data-engineering-at-meta/</guid>
      <description>High-Level Overview of the internal tech stack</description>
    </item>
    
    <item>
      <title>Data Ingestion: Architectural Patterns</title>
      <link>https://hehe-1234.xyz/post/2024/02/data_ingestion_architectural_patterns/</link>
      <pubDate>Mon, 15 Jan 2024 09:08:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2024/02/data_ingestion_architectural_patterns/</guid>
      <description>data ingestion 的几种架构：Unified Data Repository、Data Virtualization、ETL、ELT、Stream Processing</description>
    </item>
    
    <item>
      <title>Hive MetaStore的实现和优化</title>
      <link>https://hehe-1234.xyz/post/2024/01/hms/</link>
      <pubDate>Sun, 14 Jan 2024 09:08:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2024/01/hms/</guid>
      <description>Hive MetaStore的实现原理，Hive Thrift 客户端和服务端的实现，MetaCat对 HMS 的兼容以及优化，Spark调用 HMS 的逻辑</description>
    </item>
    
    <item>
      <title>Analyzing and Comparing Lakehouse Storage Systems</title>
      <link>https://hehe-1234.xyz/post/2024/01/lakehouse_storage_systems/</link>
      <pubDate>Wed, 10 Jan 2024 09:08:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2024/01/lakehouse_storage_systems/</guid>
      <description>讨论了 LakeHouse 系统设计的难点，在不可变高延迟的对象存储之上，增加事务特性，三大系统都使用了OCC做隔离，事务实现都用了MVCC，源数据库管理delta和hudi用了表格式，iceberg用了层次存储(单节点处理)，数据更新三者都支持CoW(适合读多写少场景)，hudi和iceberg支持MoR(适合写多的场景)</description>
    </item>
    
    <item>
      <title>The History of Big data</title>
      <link>https://hehe-1234.xyz/post/2023/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%8E%86%E5%8F%B2/</link>
      <pubDate>Sun, 19 Nov 2023 09:13:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%8E%86%E5%8F%B2/</guid>
      <description>从谷歌的三篇论文到Hadoop的诞生，再是各种开源产品依次出现，Hive对MapReduce的易用性改进，三大Hadoop 供应商，谷歌新三篇论文诞生了交互式查询（三大供应商推出）以及各种开源存储格式，Spark的出现和各种流处理系统，Netflix也证明了云的强大，流批一体以及各种分布式调度系统，基于云的数仓产品出现，HDFS替换上云、容器化出现、全托管数仓Modern Data Stack、深度学习对Hadoop的影响，三大供应商被收购，三大开放表格存储的出现，几个元数据管理产品，几个新的调度框架，LakeHouse的出现以及相关类似云产品</description>
    </item>
    
    <item>
      <title>Presto在各大公司的应用</title>
      <link>https://hehe-1234.xyz/post/2023/07/presto%E5%9C%A8%E5%90%84%E5%A4%A7%E5%85%AC%E5%8F%B8%E7%9A%84%E5%BA%94%E7%94%A8/</link>
      <pubDate>Wed, 12 Jul 2023 09:11:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/07/presto%E5%9C%A8%E5%90%84%E5%A4%A7%E5%85%AC%E5%8F%B8%E7%9A%84%E5%BA%94%E7%94%A8/</guid>
      <description>Presto在 B站、字节跳动等 各大公司的应用</description>
    </item>
    
    <item>
      <title>SQL Server Column Store Indexes</title>
      <link>https://hehe-1234.xyz/post/2023/05/sql_server_column_store_indexes/</link>
      <pubDate>Wed, 24 May 2023 18:11:07 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/05/sql_server_column_store_indexes/</guid>
      <description>SQL Server 11代 Denali，在行存系统上增加了列存和索引结构，这些改动并不是重新来一套，而是基于现有技术的改进，如对行做了分片segment，每个 row segment 再根据 column 进一步细分为 column segment；column segment本身是现有的 blob存储，同时还利用了压缩技术，基于 column segment 又开发出了 segment directory，这个 directory包含了一些元信息如行数量、size、多少数据被编码了、min和max等，这些改动之后，还可以跟现有的lock、log、recovery、patition、mirror、replication完全兼容整合；之后查询引擎部分也会做一些改动来兼容行、列数据，这里使用了多核、bitmap filter、算子间的内存共享、SIMD等进一步优化，根据代价模型评估，选择合适的索引，测试TPC-DS时，前面大部分数据都是批的方式处理的，而且做了并行化，只有最后的聚合、重分区是用 行模式处理的，最后效率大幅度提升</description>
    </item>
    
    <item>
      <title>Advanced Database Systems: History of Databases</title>
      <link>https://hehe-1234.xyz/post/2023/05/advanced_database_systems-history_of_databases/</link>
      <pubDate>Sun, 21 May 2023 09:23:04 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/05/advanced_database_systems-history_of_databases/</guid>
      <description>数据库的发展历史，从复杂模型：网络模型、层次模型，再到简单的关系模型最后胜出，关系模型不止是简单，而且提出了物理、逻辑解耦、高层级别API；所以从1970年代开始，数据库的基本模型，发展方向是定了；后面出现了各种对关系模型的补充，但是大多数只是重复发明，除了code in database，schema last是比较新颖的发明；在这几十年内，商业数据库一直是主导，IBM、Oracle、微软一直是领导者；直到2000年互联网的出现打破了这个局面，数据库面临大量的访问，需要购买大量商业数据库成本太贵，此时开源产品就是更好的选择；同时也出现了各种对关系模型，他们的扩展性、性能都非常好，但他们不支持SQL、不支持事务，十年之后再看这些数据库多多少少都有一些局限性，于是分布式的NewSQL出现，加上云厂商的对象存储，云上数据库也成为主流；现在数据库有很多细分市场，每个主题内都有好几个玩家，这些数据库在巩固自己领地的同时，又在不断扩展自己的能力；他们开始支持SQL，增加事务，从历史角度看，声明式语言、解耦、简单模型一直是有生命力的</description>
    </item>
    
    <item>
      <title>Column-Stores vs. Row-Stores: How Different Are They Really?</title>
      <link>https://hehe-1234.xyz/post/2023/05/column-stores_vs_row-stores_how_different_are_they_really/</link>
      <pubDate>Sun, 07 May 2023 13:23:04 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/05/column-stores_vs_row-stores_how_different_are_they_really/</guid>
      <description>论文中通过行存系统来模拟列存，并将几个可能提升的关键点：延迟物化、块迭代、压缩、invisible-join，挨个拆分，并分析每种可能提升的原因和提升比例‘在行存的系统中使用垂直分区依然达不到列存性能，因为垂直分区后需要冗余存储主键，重建这些tuple 需要hash-join，数量大内存CPU开销也大；全索引如果返回的数据多hash-join压力大可能会更慢，反之可能更快；物化视图最好只需要读取部分数据，bitmap选择率高时效率会变差。对于列存：块迭代可以提升5% - 50%性能(取决于压缩)、invisible-join可以提升50% - 70%、压缩为2倍，如果数据有序可以量级提升、延迟物化提升3倍，如果将这些全部去掉，列存跟行存就差不多了；在列存中使用反规范化大宽表效果不好，增加维度表列冗余数据变多、只有大宽表的维度属性是排序高度压缩的才有效</description>
    </item>
    
    <item>
      <title>Lakehouse A New Generation of Open Platforms that Unify Data Warehousing and Advanced Analytics</title>
      <link>https://hehe-1234.xyz/post/2023/05/lakehouse-a-new-generation-of-open-platforms-that-unify/</link>
      <pubDate>Sat, 06 May 2023 12:17:11 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/05/lakehouse-a-new-generation-of-open-platforms-that-unify/</guid>
      <description>第一代的数仓有很好的数据治理，缺点是计算存储耦合，且无法存储半结构数据；第二代的数据湖将计算存储分离，且能存储各种格式，云厂商推出的对象存储本质是差不多，不过扩展和可靠性更高更便宜，但二代需要两套系统，数据要在数仓和对象存储之间做ETL，有很多问题；而LakeHouse则试图解决这些问题，通过在对象存储之上增加元数据管理，实现事务功能，数据质量、ACID都实现了，因为是基于开放的格式，不会锁定厂商，也能支持各种场景。因为开放的格式和对象存储的延迟问题，性能和每秒事务不会很好，通过缓存系统、辅助数据结构、数据布局优化来优化性能，另外DataFream 支持SQL和 API，可以延迟处理这样可以进一步优化。目前的限制：S3的延迟、单表事务、servless；通过TPC-DS对比其他云厂商的数仓，性能和价格都很不错，还能支持传统场景，机器学习、科学分析等各种复杂场景。</description>
    </item>
    
    <item>
      <title>Building An Elastic Query Engine on Disaggregated Storage</title>
      <link>https://hehe-1234.xyz/post/2023/05/building-an-elastic-query-engine-on-disaggregated-storage/</link>
      <pubDate>Thu, 04 May 2023 09:23:04 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/05/building-an-elastic-query-engine-on-disaggregated-storage/</guid>
      <description>SnowFlake的一篇论文，目前的架构包含四层：中心化的服务处理端到端的查询、计算层、临时存储层、对象存储层，并讨论了设计临时存储这一层的原因，通过访问数据指标能发现，临时存储的需求变化很大，跟计算层，远端持久存储层都不同。为更好的提高利用率需要计算层跟 临时存储层解耦。调度方面包括：工作窃取、延迟的一致性hash。由于云厂商的计费方式支持到秒级别，原先的预热VM 方式不好使了需要采用共享资源的方式来支持多租户，带来的挑战是，重新设计临时存储层(这层缓存了持久数据和中间数据，扩容会影响其他租户)，需要提供私有地址。三个开放问题：临时存和计算层解耦、内存-SSD-远端存储三层机制的有效管理、亚秒计费策略的共享资源架构挑战</description>
    </item>
    
    <item>
      <title>LevelDB 多版本和压缩</title>
      <link>https://hehe-1234.xyz/post/2023/04/levedb-%E5%A4%9A%E7%89%88%E6%9C%AC%E5%92%8C%E5%8E%8B%E7%BC%A9/</link>
      <pubDate>Fri, 14 Apr 2023 19:20:03 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/04/levedb-%E5%A4%9A%E7%89%88%E6%9C%AC%E5%92%8C%E5%8E%8B%E7%BC%A9/</guid>
      <description>LevelDB 多版本和压缩</description>
    </item>
    
    <item>
      <title>LevelDB 辅助工具类</title>
      <link>https://hehe-1234.xyz/post/2023/04/levedb-%E5%B7%A5%E5%85%B7%E7%B1%BB/</link>
      <pubDate>Tue, 11 Apr 2023 09:20:01 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/04/levedb-%E5%B7%A5%E5%85%B7%E7%B1%BB/</guid>
      <description>LevelDB 的辅助工具类，如内存分配、编码、LRU、bloom filter等</description>
    </item>
    
    <item>
      <title>LevelDB SSTable模块</title>
      <link>https://hehe-1234.xyz/post/2023/04/levedb-sstable%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Sun, 09 Apr 2023 09:22:11 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/04/levedb-sstable%E6%A8%A1%E5%9D%97/</guid>
      <description>LevelDB 的SSTable模块，存储在磁盘上的结构，包括文件格式的组织、数据文件块是如何读取的、索引文件块是如何组织的</description>
    </item>
    
    <item>
      <title>LevelDB MemTable模块</title>
      <link>https://hehe-1234.xyz/post/2023/04/levedb-memtable%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Thu, 06 Apr 2023 11:32:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/04/levedb-memtable%E6%A8%A1%E5%9D%97/</guid>
      <description>LevelDB 的MemTable模块，底层使用 skip-list实现的，用来实现内存的读、写操作</description>
    </item>
    
    <item>
      <title>LevelDB Log模块</title>
      <link>https://hehe-1234.xyz/post/2023/04/levedb-log%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Mon, 03 Apr 2023 11:32:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/04/levedb-log%E6%A8%A1%E5%9D%97/</guid>
      <description>LevelDB 的Log模块，用来实现WAL</description>
    </item>
    
    <item>
      <title>LevelDB 公开的接口</title>
      <link>https://hehe-1234.xyz/post/2023/03/levedb-%E5%85%AC%E5%BC%80%E6%8E%A5%E5%8F%A3/</link>
      <pubDate>Thu, 30 Mar 2023 11:32:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/03/levedb-%E5%85%AC%E5%BC%80%E6%8E%A5%E5%8F%A3/</guid>
      <description>LevelDB 的 src/include目录下的公开接口、跨平台的移植(对文件读写、线程、锁做了简单封装方便了跨平台迁移)，读写流程的大致流程等</description>
    </item>
    
    <item>
      <title>LevelDB 基本概念</title>
      <link>https://hehe-1234.xyz/post/2023/03/levedb-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Mon, 27 Mar 2023 11:32:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/03/levedb-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</guid>
      <description>LevelDB的架构，各个组件的基本原理，一些基本操作(open、增删改)，高级特性(options、自定义比较器)</description>
    </item>
    
    <item>
      <title>Efficiently Compiling Efficient Query Plans for Modern Hardware</title>
      <link>https://hehe-1234.xyz/post/2023/02/efficiently-compiling-efficient-query-plans-for-modern-hardware/</link>
      <pubDate>Sun, 05 Feb 2023 17:35:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/02/efficiently-compiling-efficient-query-plans-for-modern-hardware/</guid>
      <description>这是HyPer的一篇论文(HyPer是由德国莫尼黑大学主导的OLAP、OLTP混合型主内存数据库)，介绍了code-gen的具体实现，最初HyPer的code-gen是生成了C++代码，然后使用gcc编译；但编译时间很长，再加上优化时间就更长了，甚至比查询执行时间还长；于是HyPer做了优化，改用LLVM，将code-gen的核心代码转为了LLVM的IR，这个IR是调用LLVM的API生成的，不是手写的所以相对容易一些，对于一些简单的操作是生成了LLVM，于是复杂的操作，如scan、join、sort需要将LLVM和C++混合执行，LLVM可以直接调用C++，所以不存在性能损失；通过最后执行来看，LLVM的code-gen从编译、优化时间，SQL执行时间，都比其他系统有很大提升</description>
    </item>
    
    <item>
      <title>Generating code for holistic query evaluation</title>
      <link>https://hehe-1234.xyz/post/2023/02/generating-code-for-holistic-query-evaluation/</link>
      <pubDate>Sat, 04 Feb 2023 07:35:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/02/generating-code-for-holistic-query-evaluation/</guid>
      <description>英国爱丁堡大学的一篇论文，从传统系统到现代系统的变化一个重要点是：内存增大很多，以前的I/O瓶颈对于现在来说不那么重要了，反而是CPU和内存瓶颈；而之前的火山模型对于CPU利用率来说很不好，大量的虚函数调用，多层级的函数调用增加了cache miss，也会产生更多的指令，不利于并行化和cache局部性；这篇论文提出了一个代码模板，通过识别不同的查询计划算子，来对应的生成不同的代码(对应一个大函数)，不同函数之间通过物化来连接，之后通过编译器GCC来编译这段C代码，还可以对代码最O2级别优化(但会增加运行期执行时间)来达到更好的效果，论文对比了join、sort、聚合，虽然使用的是NSM存储模型，但是执行效果来看跟MonetDB的DSM差不多了；代码生成的缺点是对于小查询会有额外的开销(编译、优化、link时间)</description>
    </item>
    
    <item>
      <title>Implementing Database Operations Using SIMD Instructions</title>
      <link>https://hehe-1234.xyz/post/2023/02/implementing-database-operations-using-simd-instructions/</link>
      <pubDate>Wed, 01 Feb 2023 07:35:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/02/implementing-database-operations-using-simd-instructions/</guid>
      <description>介绍了SIMD指令一些基本概念，并行流水线，以及分支预测失败带来的影响；论文中提到了使用SIMD指令的方式，以及不同平台产生的差异；之后用伪代码的方式描述几个数据库常用操作；scan操作详细对比了标量版和SIMD版的区别，以及如何消除分支的方式，还有返回选中的一个元素、多个元素的标量、SIMD方式；聚合的实现方式SIMD有提供相关的操作 SIMD_min、SIMD_max即可，对于索引部分主要是介绍树结构索引，详细讨论了中间节点、叶子节点的实现方式；在有序元素上使用二分效率是非常高的，但也会有分支预测失败问题，论文中给出了混合二分+顺序扫描方式；最后是join处理方式，这里只列出了nested-loop join的SIMD实现，Duplicate-outer、Duplicate-inner、Rotate-inner</description>
    </item>
    
    <item>
      <title>Advanced Database Systems: Query Execution &amp; Processing</title>
      <link>https://hehe-1234.xyz/post/2023/01/advanced-database-systems-query-execution-and-processing/</link>
      <pubDate>Sun, 22 Jan 2023 19:35:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/01/advanced-database-systems-query-execution-and-processing/</guid>
      <description>这一部分是属于 执行引擎组件，由于现代系统从I/O变为CPU瓶颈，CPU的指令依赖、分支预测就阻塞了并行优化；MonetDB/X100就指出了火山模型、物化模型的问题，后使用了向量化/批模型来优化，为后续系统提供了方向。查询处理又包括：自顶向下vs字底向上；并行化包括：水平(exchange算子)、垂直、以及混合；worker的分配还包括单核单线程、单核pool；列存重建使用早期物化+SIP达到了早期物化的简单，同时兼具性能；主内存系统中二级索引和scan都有用，但需要综合考虑：选择性；硬件参数、数据布局、并发，优化器也需要配合重构整合；Oracle首创的混合行+列存储，又进一步提供了表达式替换(本质上是语法树子节点替换)</description>
    </item>
    
    <item>
      <title>SIMD-Scan: Ultra Fast in-Memory Table Scan using onChip Vector Processing Units</title>
      <link>https://hehe-1234.xyz/post/2023/01/ultra-fast-in-memory-table-scan-using-onchip-vector-processing-units/</link>
      <pubDate>Thu, 19 Jan 2023 10:35:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/01/ultra-fast-in-memory-table-scan-using-onchip-vector-processing-units/</guid>
      <description>现代数据库由I/O瓶颈转向了CPU瓶颈，利用多核能力加速全表扫描，但是向量化的能力没能充分发挥。使用向量化包括：内嵌汇编、硬件厂商提供的跨平台库函数、编译器指示符、编译器自动优化，每种都是可用性和可控性之间的权衡。论文中引入了两项优化：使用SIMD方式在寄存器中解压 轻量压缩数据(使用concatenate、shift、shuffle、mark等指令完成)；使用SIMD完成等值和范围查找(使用掩码指令，将4个元素加载到寄存器中，再通过min、max比较范围，最后生成索引数组向量位)，通过测试结果都有大幅度提升，并且优化实现可以适用各种数据库</description>
    </item>
    
    <item>
      <title>Accelerating Analytics with Dynamic In-Memory Expressions</title>
      <link>https://hehe-1234.xyz/post/2023/01/accelerating-analytics-with-dynamic-in-memory-expressions/</link>
      <pubDate>Fri, 13 Jan 2023 14:05:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/01/accelerating-analytics-with-dynamic-in-memory-expressions/</guid>
      <description>Oracle12推出了混合行/列的存储格式，磁盘(buffer pool)中按列存储，内存中按列存储加速OLAP场景；而表达式求值在很多场景下是黑盒，不易监控、也占用资源，Oracle捕获了频繁使用的表达式，将表达式物化到内存中，然后在查询计划中，根据代价来改变查询计划，将原始的查询计划的子树，替换为内存中的物化表达式，在OLAP场景中大幅度提升性能，在混合OLTP场景中也非常有效</description>
    </item>
    
    <item>
      <title>Materialization Strategies in the Vertica Analytic Database: Lessons Learned</title>
      <link>https://hehe-1234.xyz/post/2023/01/materialization-strategies-in-the-vertica-analytic-database-lessons-learned/</link>
      <pubDate>Sat, 07 Jan 2023 20:05:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/01/materialization-strategies-in-the-vertica-analytic-database-lessons-learned/</guid>
      <description>列存数据库会通过物化的方式来重建tuple，包括早期物化EM、延迟物化LM，延迟物化的性能更好，但实现更难，当出现join溢出时会出现，此时会退回到早期物化；论文在早期物化基础上增加了：边信息传递SIP技术，并给出了实现细节，如何创建SIP，如何做push down；使用EM+SIP技术，比原始的EM性能大幅度提升，并且在很多场景下比延迟物化LM性能更好</description>
    </item>
    
    <item>
      <title>MonetDB/X100: Hyper-Pipelining Query Execution</title>
      <link>https://hehe-1234.xyz/post/2023/01/monetdbx100-hyper-pipelining-query-execution/</link>
      <pubDate>Thu, 05 Jan 2023 10:35:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/01/monetdbx100-hyper-pipelining-query-execution/</guid>
      <description>2005年的一篇论文，通过分析MySQL、MonetDB发现这两种没有达到硬件上的预期效果，MySQL是因为经典的火山模型导致编译器没法利用循环流水线，出现大量CPU等待；而MonetDB避免了上述情况但使用了物化，又导致大量的内存带宽拷贝；这篇论文结合了这两者的特点，选择了向量化的执行方式，并配合了合适的cache size，使得执行效率大幅度提升</description>
    </item>
    
    <item>
      <title>Access Path Selection in Main-Memory Optimized Data Systems Should I Scan or Should I Probe</title>
      <link>https://hehe-1234.xyz/post/2023/01/access-path-selection-in-main-memory-optimized-data-systems-should-i-scan-or-should-i-probe/</link>
      <pubDate>Tue, 03 Jan 2023 10:35:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/01/access-path-selection-in-main-memory-optimized-data-systems-should-i-scan-or-should-i-probe/</guid>
      <description>CMU Query Execution &amp;amp; Processing课程的一篇论文，现代分析系统中scan越来越重要，但二级索引依然有用，通过对比硬件参数、数据布局、压缩、并发等综合情况考虑之下，来选择：scan执行 或者index执行；通过性能评估发现，调节scan或者index并不是一个固定的值，而是根据不同的参数以及硬件情况，会动态变化的</description>
    </item>
    
    <item>
      <title>Photon A Fast Query Engine for Lakehouse Systems</title>
      <link>https://hehe-1234.xyz/post/2023/01/photon-a-fast-query-engine-for-lakehouse-systems/</link>
      <pubDate>Mon, 02 Jan 2023 10:35:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/01/photon-a-fast-query-engine-for-lakehouse-systems/</guid>
      <description>Databricks 2022年在SIGMOD上发表的论文(最佳工业论文奖)，由于I/O方面有很多优化措施，而JVM的对向量化支持较差，之后用C++实现了向量化的执行引擎Photon，来实现进一步的性能提升；首先是从最底层scan开始替换，因为中间替换的代价较高，之后不断往上，直到某个算子Photon不能适配，则由列存转换为Spark的行存，退回到Spark执行，总体看性能可以提升好几倍</description>
    </item>
    
    <item>
      <title>用工具分析MySQL存储文件</title>
      <link>https://hehe-1234.xyz/post/2022/12/%E7%94%A8%E5%B7%A5%E5%85%B7%E5%88%86%E6%9E%90mysql%E5%AD%98%E5%82%A8%E6%96%87%E4%BB%B6/</link>
      <pubDate>Tue, 13 Dec 2022 08:35:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/12/%E7%94%A8%E5%B7%A5%E5%85%B7%E5%88%86%E6%9E%90mysql%E5%AD%98%E5%82%A8%E6%96%87%E4%BB%B6/</guid>
      <description>innodb_ruby是专门分析InnoDB的工具，通过这个工具能获取到系统表空间、普通表空间的统计信息，段信息、区信息，以及4个核心的SYS表；；以及索引信息统计，page信息汇总，page信息dump，还可以用图表的方式展示</description>
    </item>
    
    <item>
      <title>调试MySQL</title>
      <link>https://hehe-1234.xyz/post/2022/11/%E8%B0%83%E8%AF%95mysql/</link>
      <pubDate>Sun, 20 Nov 2022 08:35:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/11/%E8%B0%83%E8%AF%95mysql/</guid>
      <description>搭建一个MySQL调试环境</description>
    </item>
    
    <item>
      <title>关于云环境中多租户问题的论文</title>
      <link>https://hehe-1234.xyz/post/2022/11/multi-tenant-cloud-data-services/</link>
      <pubDate>Fri, 18 Nov 2022 18:35:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/11/multi-tenant-cloud-data-services/</guid>
      <description>主要挑战：存储计算分离架构，多租户共享资源需要解决的问题，serverless不需要预定资源随用随付费；隔离VS安全，隔离程度高越安全但价格高，整合程度高虚拟化stack高便捷性好便宜；自建机房的SLA基本能确定，但在云共享环境中就不是一个固定值了，一般厂商会提供可用性、吞吐量、延迟这些保证，还有多租户集群管理；开放问题：CPU的扩展和内存之间的结构、缓存的动态迁移、云服务价格优化、自动调优、新硬件的影响、资源评估</description>
    </item>
    
    <item>
      <title>How to Read a Paper</title>
      <link>https://hehe-1234.xyz/post/2022/11/how-to-read-a-paper/</link>
      <pubDate>Thu, 17 Nov 2022 08:35:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/11/how-to-read-a-paper/</guid>
      <description>一篇论文要读三遍，第一遍读摘要和所有标题，对论文有大概的了解，这是什么类型的论文、测试的？还是分析型的？根据其他哪些论文有关？论文的主要贡献是什么？第二遍仔细阅读，对于共识和非常细节的地方可以略过；第三遍，要站在作者的角度去理解这篇论文，甚至要反推论文中的实现</description>
    </item>
    
    <item>
      <title>容器网络</title>
      <link>https://hehe-1234.xyz/post/2022/10/%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Sun, 16 Oct 2022 12:12:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/10/%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C/</guid>
      <description>容器网络原理</description>
    </item>
    
    <item>
      <title>B&#43;树执行过程</title>
      <link>https://hehe-1234.xyz/post/2022/10/b&#43;%E6%A0%91%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Sat, 15 Oct 2022 12:12:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/10/b&#43;%E6%A0%91%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B/</guid>
      <description>B+树的原理、插入和删除</description>
    </item>
    
    <item>
      <title>k8s POD使用总结</title>
      <link>https://hehe-1234.xyz/post/2022/09/k8s%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 18 Sep 2022 12:12:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/09/k8s%E4%BD%BF%E7%94%A8/</guid>
      <description>k8s使用的一些记录</description>
    </item>
    
    <item>
      <title>Architecture of a Database System论文翻译</title>
      <link>https://hehe-1234.xyz/post/2022/09/architecture-of-a-database-system/</link>
      <pubDate>Sat, 03 Sep 2022 11:11:11 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/09/architecture-of-a-database-system/</guid>
      <description>Hellerstein、Michael Stonebraker、James Hamilton几位大神写的数据库系统架构</description>
    </item>
    
    <item>
      <title>确定要在DBMS中用mmap吗</title>
      <link>https://hehe-1234.xyz/post/2022/08/%E7%A1%AE%E5%AE%9A%E8%A6%81%E5%9C%A8dbms%E4%B8%AD%E7%94%A8mmap%E5%90%97/</link>
      <pubDate>Thu, 11 Aug 2022 19:08:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/08/%E7%A1%AE%E5%AE%9A%E8%A6%81%E5%9C%A8dbms%E4%B8%AD%E7%94%A8mmap%E5%90%97/</guid>
      <description>2022年 CIDR的一篇论文，CMU的网红教授发表的，介绍mmap的概念，以及为什么数据库不要用mmap</description>
    </item>
    
    <item>
      <title>为何Uber要将PostgreSQL迁到MySQL</title>
      <link>https://hehe-1234.xyz/post/2022/08/%E4%B8%BA%E4%BD%95uber%E8%A6%81%E5%B0%86postgresql%E8%BF%81%E5%88%B0mysql/</link>
      <pubDate>Mon, 08 Aug 2022 12:12:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/08/%E4%B8%BA%E4%BD%95uber%E8%A6%81%E5%B0%86postgresql%E8%BF%81%E5%88%B0mysql/</guid>
      <description>2016年的一篇文章，讲述了uber为什么要将PostgreSQL迁移到MySQL</description>
    </item>
    
    <item>
      <title>Kyuubi设计调研</title>
      <link>https://hehe-1234.xyz/post/2022/08/kyuubi%E8%AE%BE%E8%AE%A1%E8%B0%83%E7%A0%94/</link>
      <pubDate>Mon, 01 Aug 2022 12:12:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/08/kyuubi%E8%AE%BE%E8%AE%A1%E8%B0%83%E7%A0%94/</guid>
      <description>Kyuubi设计调研</description>
    </item>
    
    <item>
      <title>容灾部署调研</title>
      <link>https://hehe-1234.xyz/post/2022/07/%E5%AE%B9%E7%81%BE%E9%83%A8%E7%BD%B2%E8%B0%83%E7%A0%94/</link>
      <pubDate>Sat, 30 Jul 2022 14:32:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/07/%E5%AE%B9%E7%81%BE%E9%83%A8%E7%BD%B2%E8%B0%83%E7%A0%94/</guid>
      <description>容灾部署调研</description>
    </item>
    
    <item>
      <title>What&#39;s Really New with NewSQL论文</title>
      <link>https://hehe-1234.xyz/post/2022/07/whats-really-new-with-newsql%E8%AE%BA%E6%96%87/</link>
      <pubDate>Sun, 03 Jul 2022 20:32:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/07/whats-really-new-with-newsql%E8%AE%BA%E6%96%87/</guid>
      <description>What’s Really New with NewSQL? 论文 2016年发表在 sigmod上的</description>
    </item>
    
    <item>
      <title>PingCAP提供的数据库学习资料</title>
      <link>https://hehe-1234.xyz/post/2022/07/pingcap%E6%8F%90%E4%BE%9B%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</link>
      <pubDate>Sat, 02 Jul 2022 14:32:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/07/pingcap%E6%8F%90%E4%BE%9B%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</guid>
      <description>PingCAP提供的数据库学习资料</description>
    </item>
    
    <item>
      <title>Snowflake论文</title>
      <link>https://hehe-1234.xyz/post/2023/03/snowflake%E8%AE%BA%E6%96%87/</link>
      <pubDate>Sat, 02 Jul 2022 14:32:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/03/snowflake%E8%AE%BA%E6%96%87/</guid>
      <description>The Snowflake Elastic Data Warehouse 论文 2015年发表在 sigmod上的</description>
    </item>
    
    <item>
      <title>Spark SQL论文</title>
      <link>https://hehe-1234.xyz/post/2022/07/spark-sql%E8%AE%BA%E6%96%87/</link>
      <pubDate>Fri, 01 Jul 2022 20:45:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/07/spark-sql%E8%AE%BA%E6%96%87/</guid>
      <description>Spark SQL: Relational Data Processing in Spark 论文</description>
    </item>
    
    <item>
      <title>Delta Lake论文</title>
      <link>https://hehe-1234.xyz/post/2022/06/delta-lake%E8%AE%BA%E6%96%87/</link>
      <pubDate>Fri, 24 Jun 2022 21:45:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/06/delta-lake%E8%AE%BA%E6%96%87/</guid>
      <description>Delta Lake: High-Performance ACID Table Storage over Cloud Object Stores 论文</description>
    </item>
    
    <item>
      <title>Chubby论文</title>
      <link>https://hehe-1234.xyz/post/2022/06/chubby%E8%AE%BA%E6%96%87/</link>
      <pubDate>Thu, 16 Jun 2022 09:43:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/06/chubby%E8%AE%BA%E6%96%87/</guid>
      <description>The Chubby lock service for loosely-coupled distributed systems 论文</description>
    </item>
    
    <item>
      <title>Raft A Consensus Algorithm for Replicated Logs记录</title>
      <link>https://hehe-1234.xyz/post/2022/06/raft-a-consensus-algorithm-for-replicated-logs%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Sun, 05 Jun 2022 09:43:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/06/raft-a-consensus-algorithm-for-replicated-logs%E8%AE%B0%E5%BD%95/</guid>
      <description>Raft A Consensus Algorithm for Replicated Logs总结</description>
    </item>
    
    <item>
      <title>自定义HiveServer设计</title>
      <link>https://hehe-1234.xyz/post/2022/06/%E8%87%AA%E5%AE%9A%E4%B9%89hiveserver%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sun, 05 Jun 2022 09:43:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/06/%E8%87%AA%E5%AE%9A%E4%B9%89hiveserver%E8%AE%BE%E8%AE%A1/</guid>
      <description>实现一套自己定义的Hive RPC服务</description>
    </item>
    
    <item>
      <title>Raft论文</title>
      <link>https://hehe-1234.xyz/post/2022/05/raft%E8%AE%BA%E6%96%87/</link>
      <pubDate>Mon, 16 May 2022 18:43:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/05/raft%E8%AE%BA%E6%96%87/</guid>
      <description>In Search of an Understandable Consensus Algorithm</description>
    </item>
    
    <item>
      <title>Basic Paxos总结</title>
      <link>https://hehe-1234.xyz/post/2022/05/basic-paxos/</link>
      <pubDate>Sat, 14 May 2022 09:43:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/05/basic-paxos/</guid>
      <description>Implemening Replicated Logs with Paxos 中的Basic Paxos部分</description>
    </item>
    
    <item>
      <title>Java的APM工具原理</title>
      <link>https://hehe-1234.xyz/post/2022/05/java%E7%9A%84apm%E5%B7%A5%E5%85%B7%E5%8E%9F%E7%90%86/</link>
      <pubDate>Mon, 02 May 2022 10:43:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/05/java%E7%9A%84apm%E5%B7%A5%E5%85%B7%E5%8E%9F%E7%90%86/</guid>
      <description>Java的APM工具原理</description>
    </item>
    
    <item>
      <title>Paxos Made Simple论文</title>
      <link>https://hehe-1234.xyz/post/2022/05/paxos-made-simple%E8%AE%BA%E6%96%87/</link>
      <pubDate>Sun, 01 May 2022 20:43:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/05/paxos-made-simple%E8%AE%BA%E6%96%87/</guid>
      <description>Paxos Made Simple论文</description>
    </item>
    
    <item>
      <title>BigTable论文</title>
      <link>https://hehe-1234.xyz/post/2023/03/bigtable%E8%AE%BA%E6%96%87/</link>
      <pubDate>Wed, 20 Apr 2022 20:43:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2023/03/bigtable%E8%AE%BA%E6%96%87/</guid>
      <description>BigTable论文</description>
    </item>
    
    <item>
      <title>MapReduce论文</title>
      <link>https://hehe-1234.xyz/post/2022/04/mapreduce%E8%AE%BA%E6%96%87/</link>
      <pubDate>Wed, 20 Apr 2022 12:43:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/04/mapreduce%E8%AE%BA%E6%96%87/</guid>
      <description>MapReduce论文</description>
    </item>
    
    <item>
      <title>GFS论文</title>
      <link>https://hehe-1234.xyz/post/2022/04/gfs%E8%AE%BA%E6%96%87/</link>
      <pubDate>Wed, 13 Apr 2022 08:54:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/04/gfs%E8%AE%BA%E6%96%87/</guid>
      <description>读GFS论文</description>
    </item>
    
    <item>
      <title>MapRedue是一个巨大的退步</title>
      <link>https://hehe-1234.xyz/post/2022/03/mapredue%E6%98%AF%E4%B8%80%E4%B8%AA%E5%B7%A8%E5%A4%A7%E7%9A%84%E9%80%80%E6%AD%A5/</link>
      <pubDate>Sat, 26 Mar 2022 11:38:31 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/03/mapredue%E6%98%AF%E4%B8%80%E4%B8%AA%E5%B7%A8%E5%A4%A7%E7%9A%84%E9%80%80%E6%AD%A5/</guid>
      <description>2008年的一篇文章，著名数据库专家抨击MapReduce相比数据库是巨大退步</description>
    </item>
    
    <item>
      <title>Hive论文</title>
      <link>https://hehe-1234.xyz/post/2022/03/hive%E8%AE%BA%E6%96%87/</link>
      <pubDate>Sun, 20 Mar 2022 08:54:37 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/03/hive%E8%AE%BA%E6%96%87/</guid>
      <description>Hive论文</description>
    </item>
    
    <item>
      <title>Spark逻辑计划的解析</title>
      <link>https://hehe-1234.xyz/post/2022/03/spark%E9%80%BB%E8%BE%91%E8%AE%A1%E5%88%92%E7%9A%84%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Sun, 06 Mar 2022 11:20:43 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/03/spark%E9%80%BB%E8%BE%91%E8%AE%A1%E5%88%92%E7%9A%84%E8%A7%A3%E6%9E%90/</guid>
      <description>介绍spark是如何做逻辑计划解析，并优化的</description>
    </item>
    
    <item>
      <title>Spark的注入规则</title>
      <link>https://hehe-1234.xyz/post/2022/03/spark%E7%9A%84%E6%B3%A8%E5%85%A5%E8%A7%84%E5%88%99/</link>
      <pubDate>Fri, 04 Mar 2022 21:46:12 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/03/spark%E7%9A%84%E6%B3%A8%E5%85%A5%E8%A7%84%E5%88%99/</guid>
      <description>扩展Spark的注入规则，实现updaet</description>
    </item>
    
    <item>
      <title>用javacc实现四则运算</title>
      <link>https://hehe-1234.xyz/post/2022/02/%E7%94%A8javacc%E5%AE%9E%E7%8E%B0%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97/</link>
      <pubDate>Sat, 26 Feb 2022 15:15:11 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/02/%E7%94%A8javacc%E5%AE%9E%E7%8E%B0%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97/</guid>
      <description>用javacc实现四则运算</description>
    </item>
    
    <item>
      <title>scala的一些特性</title>
      <link>https://hehe-1234.xyz/post/2022/02/scala%E7%9A%84%E4%B8%80%E4%BA%9B%E7%89%B9%E6%80%A7/</link>
      <pubDate>Thu, 24 Feb 2022 18:35:31 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/02/scala%E7%9A%84%E4%B8%80%E4%BA%9B%E7%89%B9%E6%80%A7/</guid>
      <description>scala的一些特性</description>
    </item>
    
    <item>
      <title>Kudu的模型设计</title>
      <link>https://hehe-1234.xyz/post/2022/02/kudu%E7%9A%84%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sun, 13 Feb 2022 14:28:17 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/02/kudu%E7%9A%84%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1/</guid>
      <description>关于kudu的数据模型</description>
    </item>
    
    <item>
      <title>几种开源数据库对元数据的管理</title>
      <link>https://hehe-1234.xyz/post/2022/01/%E5%87%A0%E7%A7%8D%E5%BC%80%E6%BA%90%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%B9%E5%85%83%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%A1%E7%90%86/</link>
      <pubDate>Tue, 25 Jan 2022 18:17:22 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/01/%E5%87%A0%E7%A7%8D%E5%BC%80%E6%BA%90%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%B9%E5%85%83%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%A1%E7%90%86/</guid>
      <description>几种开源数据库对元数据的管理</description>
    </item>
    
    <item>
      <title>用DFA验证字符串中的数字</title>
      <link>https://hehe-1234.xyz/post/2022/01/%E7%94%A8dfa%E9%AA%8C%E8%AF%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%95%B0%E5%AD%97/</link>
      <pubDate>Sat, 08 Jan 2022 09:11:12 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2022/01/%E7%94%A8dfa%E9%AA%8C%E8%AF%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%95%B0%E5%AD%97/</guid>
      <description>一个字符串，包含小数和指数部分，采用DFA的方式做验证其有效性</description>
    </item>
    
    <item>
      <title>数据迁移工具DB-bridge</title>
      <link>https://hehe-1234.xyz/post/2021/12/%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E5%B7%A5%E5%85%B7db-bridge/</link>
      <pubDate>Thu, 30 Dec 2021 13:07:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2021/12/%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E5%B7%A5%E5%85%B7db-bridge/</guid>
      <description>Teradata调研</description>
    </item>
    
    <item>
      <title>HANA调研</title>
      <link>https://hehe-1234.xyz/post/2021/12/hana%E8%B0%83%E7%A0%94/</link>
      <pubDate>Wed, 29 Dec 2021 13:07:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2021/12/hana%E8%B0%83%E7%A0%94/</guid>
      <description>HANA调研</description>
    </item>
    
    <item>
      <title>Teradata调研</title>
      <link>https://hehe-1234.xyz/post/2021/12/teradata%E8%B0%83%E7%A0%94/</link>
      <pubDate>Tue, 28 Dec 2021 13:07:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2021/12/teradata%E8%B0%83%E7%A0%94/</guid>
      <description>Teradata调研</description>
    </item>
    
    <item>
      <title>QuickSQL执行过程</title>
      <link>https://hehe-1234.xyz/post/2021/12/quicksql%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Sun, 26 Dec 2021 13:06:19 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2021/12/quicksql%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B/</guid>
      <description>quick-sql 原理分析</description>
    </item>
    
    <item>
      <title>HANA和TeraData数据库迁移调研</title>
      <link>https://hehe-1234.xyz/post/2021/11/hana%E5%92%8Cteradata%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB%E8%B0%83%E7%A0%94/</link>
      <pubDate>Fri, 26 Nov 2021 17:46:21 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2021/11/hana%E5%92%8Cteradata%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB%E8%B0%83%E7%A0%94/</guid>
      <description>调研HANA和TD的数据类型，各种语法，调研迁移的可能性</description>
    </item>
    
    <item>
      <title>TPC-DS</title>
      <link>https://hehe-1234.xyz/post/2021/11/tpc-ds/</link>
      <pubDate>Fri, 26 Nov 2021 17:46:21 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2021/11/tpc-ds/</guid>
      <description>TPC-DS的安装和测试</description>
    </item>
    
    <item>
      <title>Spark论文</title>
      <link>https://hehe-1234.xyz/post/2021/11/spark%E8%AE%BA%E6%96%87/</link>
      <pubDate>Sat, 06 Nov 2021 08:49:11 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2021/11/spark%E8%AE%BA%E6%96%87/</guid>
      <description>读Spark论文</description>
    </item>
    
    <item>
      <title>N皇后</title>
      <link>https://hehe-1234.xyz/post/2021/10/n%E7%9A%87%E5%90%8E/</link>
      <pubDate>Thu, 21 Oct 2021 09:58:22 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2021/10/n%E7%9A%87%E5%90%8E/</guid>
      <description>著名的8皇后问题</description>
    </item>
    
    <item>
      <title>马拉车算法</title>
      <link>https://hehe-1234.xyz/post/2021/10/%E9%A9%AC%E6%8B%89%E8%BD%A6%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 16 Oct 2021 10:49:09 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2021/10/%E9%A9%AC%E6%8B%89%E8%BD%A6%E7%AE%97%E6%B3%95/</guid>
      <description>介绍马拉车算法，这是一种用在回文字符串场景下的算法，可以将时间复杂度压缩到极致</description>
    </item>
    
    <item>
      <title>从汇编角度看程序的执行</title>
      <link>https://hehe-1234.xyz/post/2021/10/%E4%BB%8E%E6%B1%87%E7%BC%96%E8%A7%92%E5%BA%A6%E7%9C%8B%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%89%A7%E8%A1%8C/</link>
      <pubDate>Sun, 10 Oct 2021 14:09:03 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2021/10/%E4%BB%8E%E6%B1%87%E7%BC%96%E8%A7%92%E5%BA%A6%E7%9C%8B%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%89%A7%E8%A1%8C/</guid>
      <description>分析一段程序的汇编代码，循环、函数调用、浮点执行等</description>
    </item>
    
    <item>
      <title>微服务的设计的IDEALS</title>
      <link>https://hehe-1234.xyz/post/2021/09/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E8%AE%BE%E8%AE%A1%E7%9A%84ideals/</link>
      <pubDate>Mon, 27 Sep 2021 18:34:37 +0800</pubDate>
      
      <guid>https://hehe-1234.xyz/post/2021/09/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E8%AE%BE%E8%AE%A1%E7%9A%84ideals/</guid>
      <description>微服务的设计的IDEALS</description>
    </item>
    
  </channel>
</rss>
